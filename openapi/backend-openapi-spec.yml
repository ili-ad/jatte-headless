openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/client-id/:
    get:
      operationId: listClientIDs
      description: Return a random client identifier.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/user-agent/:
    get:
      operationId: listUserAgents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createUserAgent
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/user/:
    get:
      operationId: listCurrentUsers
      description: Return details for the current authenticated user.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/refresh-token/:
    get:
      operationId: listRefreshTokens
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/disconnected/:
    get:
      operationId: listDisconnecteds
      description: Return whether the current user is marked as disconnected.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/initialized/:
    get:
      operationId: listInitializeds
      description: Return whether the current user is marked as initialized.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /:
    get:
      operationId: listindices
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - ''
  /about/:
    get:
      operationId: listabouts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - about
  /api/app-settings/:
    get:
      operationId: listget_app_settings
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/core-user-agent/:
    get:
      operationId: listget_user_agents
      description: Return the User-Agent string sent by the client.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/tag/:
    get:
      operationId: listget_tags
      description: Return a constant tag value for tests.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/token/:
    get:
      operationId: listTokens
      description: Return the current user's ID and their Supabase access token.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/ws-auth/:
    get:
      operationId: listws_auths
      description: Return a signed websocket URL for authenticated requests.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/connection-id/:
    get:
      operationId: listconnection_ids
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/rooms/{room_uuid}/draft/:
    get:
      operationId: listRoomDrafts
      description: Save and retrieve message drafts.
      parameters:
      - name: room_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createRoomDraft
      description: Save and retrieve message drafts.
      parameters:
      - name: room_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRoomDraft
      description: Save and retrieve message drafts.
      parameters:
      - name: room_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/rooms/{cid}/messages/:
    get:
      operationId: listMessages
      description: List and create messages for a room.
      parameters:
      - name: cid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
      tags:
      - api
    post:
      operationId: createMessage
      description: List and create messages for a room.
      parameters:
      - name: cid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
      tags:
      - api
  /api/rooms/{cid}/config/:
    get:
      operationId: listRoomConfigs
      description: Return basic metadata for the given room.
      parameters:
      - name: cid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/rooms/{cid}/members/:
    get:
      operationId: listRoomMembersCIDs
      description: Return paginated members for the room identified by cid.
      parameters:
      - name: cid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/rooms/{room_uuid}/config-state/:
    get:
      operationId: listRoomConfigStates
      description: Return message composer configuration for the room.
      parameters:
      - name: room_uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/sync-user/:
    post:
      operationId: createSyncUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/register-subscriptions/:
    post:
      operationId: createregister_subscriptions
      description: Register web push subscriptions and echo them back.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/editing-audit-state/:
    post:
      operationId: createediting_audit_state
      description: Echo posted editing audit state after JWT auth.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/session/:
    delete:
      operationId: destroySession
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/reminders/:
    get:
      operationId: listReminders
      description: List reminders for the current user.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createReminder
      description: Create a new reminder.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                remind_at:
                  type: string
                  format: date-time
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  reminder:
                    type: object
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
      required:
      - username
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          writeOnly: true
        body:
          type: string
          readOnly: true
        sent_by:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    Reminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
        remind_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
