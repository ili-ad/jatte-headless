| ID      | ≤ LOC | Description / Acceptance criteria                                                                                    | Touch files (expected)                                              | Owner | Status |
| ------- | ----- | -------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------- | ----- | ------ |
| **A6a** |  ≈40  | **PATCH `/api/messages/:id`** – update body → returns 200 with edited message.<br>Back‑end only.                     | `chat/views.py` `chat/serializers.py` `chat/tests/test_messages.py` | Codex | ☐      |
| **A6b** |  ≈30  | **DELETE `/api/messages/:id`** – soft‑delete (sets `deleted_at`) + **restore** via `POST …/restore/`.<br>Unit tests. | same as above                                                       | Codex | ☐      |
| **A6c** |  ≈25  | **Consumer broadcast** – in `receive_json`, map `message.updated` / `message.deleted` frames to group send.          | `chat/consumers.py`                                                 | Codex | ☐      |
| **A6d** |  ≈15  | **React updater** – in `libs/chat-shim` add handler to update local message list on `message.updated` / `.deleted`.  | `frontend/lib/ChatProvider.tsx`                                     | Codex | ☐      |
| **A7a** |  ≈35  | **Thread model hook** – add `reply_to` FK + migration.                                                               | `chat/models.py` `chat/migrations/*`                                | Codex | ☐      |
| **A7b** |  ≈25  | **sendMessage→thread** – if `parent_id` present, save threaded msg & include `{thread_id,parent_id}` in WS payload.  | `chat/views.py` `chat/consumers.py`                                 | Codex | ☐      |
| **A7c** |  ≈25  | **useThread(channel,parent)** hook returns `{messages, sendReply}`.                                                  | `frontend/lib/useThread.ts`                                         | Codex | ☐      |
| **A7d** |  ≈15  | **UI smoke** – nested reply renders indented in demo; Playwright check.                                              | `frontend/tests/e2e/threads.spec.ts`                                | Codex | ☐      |
| **A8a** |  ≈40  | **POST `/api/attachment/`** – returns `{id,url}` (dummy UUID + `/media/<id>`).                                       | `chat/views.py` `chat/tests/test_attachment.py`                     | Codex | ☐      |
| **A8b** |  ≈35  | **Composer wire‑up** – accept dropped file → call endpoint → include `attachments[]` in sendMessage.                 | `frontend/components/MessageInput.tsx`                              | Codex | ☐      |
| **A8c** |  ≈20  | **Consumer broadcast** – include `attachments` array in `message.new`.                                               | `chat/consumers.py`                                                 | Codex | ☐      |
| **A8d** |  ≈10  | **Preview stub** – existing `/api/link-preview/` already echoes title; hook it into composer.                        | `frontend/lib/linkPreview.ts`                                       | Codex | ☐      |
| **A9a** |  ≈30  | **Draft endpoints**<br>• `POST /api/drafts/` save JSON<br>• `GET /api/drafts/` load by `room_uuid` & user.           | `chat/views.py` `chat/tests/test_drafts.py`                         | Codex | ☐      |
| **A9b** |  ≈40  | **Front‑end draft sync** – keep local draft, `blur` → POST, mount → GET, fallback to localStorage if offline.        | `frontend/lib/useDraft.ts` `MessageInput.tsx`                       | Codex | ☐      |
| **A9c** |  ≈20  | **Unit test** – Jest: type text, unmount, remount → text restored.                                                   | `frontend/__tests__/draft.spec.tsx`                                 | Codex | ☐      |
